<?xml version="1.0" encoding="utf-8"?>
<framework:ManagedView xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:components="net.vicp.madz.components.*"
					   xmlns:framework="net.vicp.madz.framework.views.*" layout="vertical" width="100%" height="100%"  creationComplete="init();">
	<mx:Script>
		<![CDATA[
			import mx.collections.*;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.core.IFlexDisplayObject;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.AsyncToken;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import net.vicp.madz.components.events.ActionTableEvent;
			import net.vicp.madz.components.renderer.DateRendererFactory;
			import net.vicp.madz.invoice.vo.SummationOfProductValueTO;
			
			//////////////////////////////////////////////////////
			////
			//// Fields 
			////
			//////////////////////////////////////////////////////
			private static const INVALID:int = -1;
			private static const QUERY:int = 0;
			private static const CREATE:int = 1;
			private static const UPDATE:int = 2;
			private static const DELETE:int = 3;
			
			//private const createForm:PlantCreateDialog = new PlantCreateDialog();
			//private const updateForm:PlantModifyDialog = new PlantModifyDialog();
			
			[Bindable]
			public var list:Array;
			
			[Bindable]
			private var columnProvider:Array;
			private var resultToken:AsyncToken;
			private var lastRPCType:int;
			
			private var queryForm:SummationOfProductValuesQueryDialog ;
			
			//////////////////////////////////////////////////////
			////
			//// Methods 
			//// 
			//////////////////////////////////////////////////////
			
			//////////////////////////////////////////////////////
			//// Methods : initialize 
			//////////////////////////////////////////////////////
			private function init():void{
				initTable();
				initListeners();
			}
			
			private function initTable():void {
				columnProvider = new Array();
				
				var col:DataGridColumn = new DataGridColumn("unitOfProjectName");
				col.headerText="单位工程名称";
				col.width = 80;
				col.dataField="unitOfProjectName";
				col.editable = false;
				columnProvider.push(col);
				
				col = new DataGridColumn("quantity");
				col.headerText="产量";
				col.dataField="quantity";
				col.editable = false;
				columnProvider.push(col);  
				
				col = new DataGridColumn("amount");
				col.headerText="产值";
				col.dataField="amount";
				col.editable = false;
				columnProvider.push(col);  
				
				
				col = new DataGridColumn("count");
				col.headerText="记录数量";
				col.dataField="count";
				col.editable = false;
				columnProvider.push(col);  
				
				col = new DataGridColumn("productCode");
				col.headerText="产品代码";
				col.dataField="productCode";
				col.editable = false;
				columnProvider.push(col);             	
				
				table.columnProvider = columnProvider;
			}
			
			
			private function initListeners():void {
				//For Query
				table.addEventListener(ActionTableEvent.REQUEST_DATA_QUERY,popupQueryDialog);
				table.addEventListener(ActionTableEvent.SUBMIT_QUERY_CONDITION,executeQuery);
				
				server.addEventListener(ResultEvent.RESULT,onFetch);
				
				
			}
			
			private function popupQueryDialog(event:ActionTableEvent) : void {
				if(queryForm == null){
					queryForm = new SummationOfProductValuesQueryDialog();
				}else{
					queryForm.reset();
				}
				PopUpManager.addPopUp(queryForm as IFlexDisplayObject, this as DisplayObject, true);
				PopUpManager.centerPopUp(queryForm);
				queryForm.queryButton.addEventListener(FlexEvent.BUTTON_DOWN,onQuery);
				queryForm.closeButton.addEventListener(FlexEvent.BUTTON_DOWN,onQueryClose);
			}
			
			private function onQuery(event:FlexEvent):void {
				table.submitQueryCondition(null);
				PopUpManager.removePopUp(queryForm);
			}
			
			private function onQueryClose(event:FlexEvent):void {
				PopUpManager.removePopUp(queryForm);
			}
			
			//////////////////////////////////////////////////////
			//// Event Handlers : Query Handlers
			//////////////////////////////////////////////////////		
			private function executeQuery(event:ActionTableEvent):void{
//				var startDate : Date = new Date(Date.parse(queryForm.startTimeInput.text));
				var startDate : Date = new Date(queryForm.startTimeInput.text);
				var endDate : Date = new Date(Date.parse(queryForm.endTimeInput.text));
				
				if (queryForm.accountRunTypeGroup.selection == queryForm.allUnitOfProject) {
					resultToken = server.summarizeInvoice(startDate, endDate);
				} else {
					var unitOfProjectId : String = queryForm.unitOfProjectComboBox.selectedItem["id"];
					resultToken = server.summarizeInvoice(startDate, endDate, unitOfProjectId);
				}
				lastRPCType = QUERY;
			}
			
			
			//////////////////////////////////////////////////////
			//// Event Handlers : RPC Handlers
			//////////////////////////////////////////////////////	
			private function onFetch(event:ResultEvent):void{
				if (event.result is ArrayCollection) {
					list = ArrayCollection(event.result).toArray();
					table.model = list;
				} else {
					table.submitCreateData(event.result);
				}
			}
			
			//////////////////////////////////////////////////////
			//// Methods : Override Methods
			//////////////////////////////////////////////////////	
			public override function reset():void{
				table.reset();
			}            
		]]>
	</mx:Script>
	
	<mx:RemoteObject id="server" destination="Billing"/>
	<mx:Panel width="100%" height="100%" fontSize="12" layout="vertical" title="产值统计">
		<components:ActionTable id="table"/>
	</mx:Panel>
</framework:ManagedView>

